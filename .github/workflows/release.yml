name: Release Tag

on:
  push:
    tags:
      - '*'
    branches-ignore:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.12.13+hotfix.7'
    - name: Get Dependencies
      run: flutter pub get
    - name: Analyze Project
      run: flutter analyze
    - name: Run Tests
      run: flutter test
    - name: Build APK
      run: flutter build apk --release --target=lib/main_prod.dart
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: build/app/outputs/apk/release/app-release.apk
        asset_name: Flutter_Leitor.apk
        asset_content_type: application/vnd.android.package-archive
    - name: Upload Release to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1.1.1
      with:
        appId: ${{secrets.FIREBASE_APP_ID}}
        token: ${{secrets.FIREBASE_TOKEN}}
        # groups: testers
        file: build/app/outputs/apk/release/app-release.apk
